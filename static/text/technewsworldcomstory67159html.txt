https://www.technewsworld.com/story/67159.html
Plan Your Project's Testing - or Plan to Fail | Developers | TechNewsWorld <img height="1" width="1" style="display:none" src="https://www.facebook.com/tr?id=535191343593734&amp;ev=PageView&amp;noscript=1"> Explore Newsletters from ECT News Network Â» View Samples | Subscribe E-BUSINESS | TECHNOLOGY | CRM | LINUX | ECTNEWS.COM Welcome Guest | Sign In Developers Computing Applications Data Management Hardware Chips Personal Computers Servers Operating Systems Internet Internet of Things Online Entertainment Search Tech Social Networking Web Apps IT Developers IT Leadership Network Management Mobile Tech Mobile Apps Smartphones Tablets Wearable Tech Wireless Networking Reviews Security Cybersecurity Hacking Malware Privacy Technology Audio/Video Emerging Tech Virtual Reality Gaming Home Tech How-To Photography Science Health Space Tech Buzz Tech Law Transportation Women In Tech Tech Blog Reader Services Account Management Discussion News Alerts Newsletters Reader Surveys RSS / Headline Feeds Search ECT News Network ECT News Network Map CRM Buyer Site Map E-Commerce Times Site Map LinuxInsider Site Map TechNewsWorld Site Map March 27, 2020 05:26:00 PM PDT TechNewsWorld > IT > Developers | Next Article in Developers EXPERT ADVICE Plan Your Project's Testing - or Plan to Fail Print Email By James F. York May 26, 2009 4:00 AM PT Webinar: Unlocking the Potential of Password Vault Alternatives Understanding the differing Privileged Access Management solutions can be a challenge, especially for Linux of UNIX environments. Learn how to create a more comprehensive security approach by examining the different approaches of password vaults and privilege management during this webinar. Does testing require a plan? That may sound like a silly question, but many organizations leave the testing to the end of the project, and whatever time is left is the time that will be spent on testing. That philosophy brings up many questions: What is the purpose of the test plan? What is to be accomplished with the testing? How are resources allocated for testing? How much time should be spent on testing? And, of course, how much testing is enough? In the event that defects are uncovered, will they be resolved prior to shipment? Will the client be made aware of these problems? Have resources been allocated to resolve the critical defects? Many people assume that testing will continue until the product ships, but there must be a plan for how to do the required testing that takes into account the resources that will be available and when will they be necessary. Testing, like any other part of a project, must be carefully planned in order to accomplish the objectives. Budgets, people, time, required testing -- all have to be identified up front and scheduled during the project cycle. What Is the Purpose of the Test Plan? The test plan identifies what needs to be tested. It is essential to identify what needs to be tested and prioritize those tasks before beginning to allocate resources such as budget, time, people, and tools. So, how are the client's needs communicated to the test group? It should be the same way all resources are identified -- by understanding the requirements. Requirements are the must-haves. Clients may request more than what a project is capable of delivering, so it's critical to separate the "needs from the wants." This must be done prior to the beginning of any design or coding. Is there a clear understand of requirements prior to the beginning of the project? The requirements-gathering process should eliminate most of the scope creep associated with a project. Keep in mind that the overall purpose of testing is to demonstrate that the product will meet the client's needs, and not just to demonstrate that the program runs. If those needs are not clearly identified prior to the design phase, time may be spent on less important features and the required functions may be missed. If a project fails to meet requirements, then it's a complete waste of time. The objective of any project should be customer satisfaction. That can be achieved only if everyone is in agreement on what the final outcome of the project should be. Testing must be done in parallel with development. Programs should be designed modularly so they can be tested as the project moves along, not just at the end. The best time to test is immediately after a module is finished -- when it's still fresh in the programmers' heads, and any problems encountered can be readily addressed and resolved. That's also the time to resolve any misunderstandings about the requirements and then share them with the other project members. It's highly likely that programmers will be removed from a project when their work is done, and it is often difficult to get those resources back in the event of a problem. The same problem won't arise again if it is uncovered early in a project. It is much cheaper to do it correctly the first time than to redo it later on. This is part of the "lessons learned" during the project. It is also very likely that some of the original staff will be reassigned during the project cycle and if they are, then who will be resolving the problems? Where will those resources come from? The phrase, "It works on my machine" is heard all too often. The program may be right -- that is, it runs as designed -- but does it meet the user's needs? Is it the right program? This must be demonstrated early in the project, not only at the end. If it is necessary to fix problems later on, then how much of the additional coding and testing will have to be subjected to regression testing to demonstrate that nothing has been negatively affected? Regression testing is rarely done on a full system, since there is never enough time to retest -- but if it is touched, then it must be retested, along with any other features affected by the change. Regression testing must be done throughout the project cycle, so there are no surprises at the end. What Are Scripts and Test Cases? These two are often confused as being the same thing. The script is the scenario of what events will happen, and the test case is the parameter that is passed to the script. Scripts are reusable, and the test case will verify that the program does or does not work. There will always be a minimum of two test cases, one positive and one negative. The same script can be used with the negative and positive parameter passed to the script. Again, it is not the quantity of testing but the quality that counts. The number of test cases will be determined by the importance of the particular feature and the ingenuity of the tester. Test scripts and test cases should be saved in a folder that is labeled by function, so they can be reused on other projects that are testing for the same functionality. It is not a good idea to bury scripts and test cases in the test plan, as they will be very difficult to recall when needed. Having them reside in a folder makes them more easily accessible and reusable. This will save time and money -- especially when enhancement or maintenance is required. Regression testing will use these files as well. Test specifications, not the test plan, will be used to develop test cases and test scripts. The test specification will define the functionality in greater detail. Any testing that is done needs to be documented so that in the event of a defect or enhancement, the recertification of the system will be much easier. Critical Success Factors are those features or functions that are absolutely necessary for the success of the program. They should be identified as early as possible, prioritized and scheduled. The critical success factors are most important, and need to be coded and tested as soon as possible. If they are not done early, and time runs out, then they might be skipped. All the parties to a project will have their own sets of critical success factors. They can be identified by the clients, programmers, project managers, etc. All of them must be identified and addressed. This is very difficult to do when a project team is not communicating well. Again, everyone involved in a project must work together as a team -- and include the test group as a part of that team. How Much Testing Is Enough? Quality and quantity do not necessarily go hand in hand. Have you not seen people work for eight hours and do only four hours of work? It goes the other way, also. Many people can do the same amount of work in less time than others. This is one of the main reasons for the test plan. Have all the objectives of the test plan been achieved? Will the client be pleased with the product? Will it meet the client's needs? All of the critical success factors must be demonstrated. The System Test will be performed by the black box test team. This test is often referred to as the "systems and integration testing cycle." However, integration testing should have been done all along the project cycle and not left to the end. If it fails at this time, there is little time to fix it before the product ships. This testing should be an accumulation of all the module testing, but now done as a complete system. The level of confidence of the system should be high prior to the beginning of system test. No critical success factor errors should be uncovered at system test time. If there are any critical factor errors uncovered, then there is something wrong with the process. There should be no surprises during this testing. "What you see is what you get," is the motto of the system test cycle. The system test is a dry run of the Acceptance Test. In additional to the standard Black Box Testing, which is done by the test team, there will be additional testing beyond the scope of the test team. The scope of this testing will be determined by the needs of each organization. These are some of the additional types of testing that may be done on the product: Alpha Testing. This testing will be done by people outside of the test group, which may include the project managers, business analysts, support center and internal users. This additional testing allows others to review and test according to their understanding of the system. Since these people are external to the test group, they will provide a different set of eyes and possibly different test scripts and test cases. These test cases should be saved for future use by the test team. Beta Testing. This testing is done at the client's site. Often referred to as "pilot testing," this testing will help to verify that the product will work in the client's environment. Sometimes, the client will have features or functions not fully identified prior to the start of the project that may present problems unanticipated by the team. They need to be identified and addressed prior to delivery. The beta testing should also have a test plan to ensure that testing is complete and applicable. Parallel Testing. This testing compares old versus new. Does the new system still have the features of the old -- and if not, was that the intent? If not, the discrepancies need to be addressed prior to the delivery of the system. Rarely will the new work like the old. That is why the system was upgraded. Have some of the previous features stopped working? Was that the plan, or did something go wrong? Was a particular feature inadvertently changed? All of the test scripts and test cases used during these three testing phases should be captured and added to the test bed repository. Since these tests will not be done by testers, they should add valuable input on how to improve succeeding test cycles. This information will enhance the data base, and in future applications, any errors identified will be prevented. Lessons learned. Acceptance Testing. The acceptance test should have been identified prior to the beginning of development and testing. This test will constantly be referred to during the project cycle to ensure that the overall objective will be achieved and there will be no surprises. The acceptance test, sometimes referred to as the "UAT," will be performed by the client with the cooperation of the business analyst. There is a need to demonstrate that what used to work still works during each and every one of these test cycles. Too often, testing is concentrated on the changes and does not include recertification that what used to work still does. Many projects fail because the fix caused a different function to stop working. This is why it is so important to have a library of regression tests. There must be test plans for each of these testing cycles. It is not the responsibility of the test group to design all of these test plans; each testing group must design its own. These plans should also include scripts and test cases. Testing by the seat of the pants will invariably produce a product that is not going to meet the client's needs. There is a lot more to testing than meets the eye. It is a reusable process that will constantly be modified and enhanced. The test plan should be a template that can more easily be accessed and customized to a specific project. Good test planning will result in cost savings not only during the project cycle, but will greatly reduce ongoing maintenance costs. James F. York is president of C/J System Solutions, which provides consulting and training for computer professionals. Get Permission to License or Reproduce this Article Print Email Reprints More by James F. York Reader Comments Be the first to comment! Related Stories Planning a Migration Route From Visual Basic 6 to .Net May 7, 2009 The Changing Face of Strategic Planning Apr 14, 2009 Cloud Implementation, Part 1: Planning for Success Apr 3, 2009 More in Developers Mozilla Straps On Jetpack for Firefox Devs Getting IT on the C-Suite's Radar IBM Launches All-Seeing, All-Knowing, Real-Time Data Cruncher The Crucial Role of Application Testing in Software Development IBM Weaves Cloud, Appliance, BPM, CEP and SOA Into One Fabric Planning a Migration Route From Visual Basic 6 to .Net More by James F. York Is It Quality Assurance or Quality Control? The Crucial Role of Application Testing in Software Development Most Popular Newsletters News Alerts What do you consider most worrisome if the Internet should go down during the pandemic? It would compromise the delivery of critical health information. It would impair the operations of providers of needed services. People would not be able to order goods online. The damage to the global economy would be incalculable. Many people would not be able to communicate with loved ones and friends. It would make working from home impossible. Loss of entertainment options could threaten mental health. Vote to See Results E-Commerce Times The Tech Industry's Tectonic Shift Report: E-Commerce Account Takeovers, Shipping Fraud on the Rise Concerns Grow That COVID-19 Could Take Down the Internet Marketing on Amazon 101 Facebook Pledges Funds for SMBs in Face of Shutdowns Amazon Buckles Under Stress of Staple-Hoarding Food and E-Commerce: A Healthy Outlook Why Retailers Need to Adopt Omnichannel Personalization CRM Buyer Zoho's Noble Endeavor How AI Can Improve Customer Retention In the Time of Virus 4 Ways Intelligent CRM Can Help You Reach Tech-Savvy Millennials 6 Signs You May Be Ready for a CRM Switch 4 Sales Presentation Innovations That Keep Viewers on the Edge of Their Seats Podcasting Around the Virus - and Beyond The Virus and Podcasting LinuxInsider AryaLinux Provides the Building Blocks for a Unique Linux Experience Zorin OS Core Makes GNOME More Comfortable Open Source Tech Rushes to Front Lines of COVID-19 War Report: Open Source Vulnerabilities Rampant in Popular Projects How to Run the Linux KDE Desktop on a Chromebook Elive Beta With Enlightenment Is Brilliant, but Don't Get Lost in the Maze Netrunner Linux Still Goes Its Own Way at 'Twenty' Linux-Powered Azure IoT Security Platform Arrives POPULAR RESOURCES Curious about the ROI of PIM? Experts from Forrester Research and Zurn Industries share their insights. Watch the webinar. On Demand Webinar Discover how to empower your agents to provide a 5-star experience to every customer. Watch Now! Content Marketers - Save 25% A well-executed content marketing strategy can help attract targeted traffic to your website. Publish your company's blog, videos, events and more on ALL EC. View Offer. Marketers - Fill Your Sales Funnel Instantly Access millions of IT and business decision makers. Our full-service global marketing program delivers sales-ready leads. Learn more. TechNewsWorld Headlines TechNewsWorld 3D Printers Join Arsenal of COVID-19 Weapons Instagram Combats COVID-19 Misinformation, Social Isolation Ask Siri if You Have the Coronavirus COVID-19 Outbreak: Thoughts From the Stay-at-Home Front Loss Prevention 101: Future-Proofing Your Network Begins With Resilience COVID-19 and Computer Security, Part 2: Shoring Up Systems for Remote Workers Crowdsourcing App Takes Aim at COVID-19 New Website Aims to Help People Access COVID-19 Testing Inside TechNewsWorld Computing VPN, Ad Blocker Provider Caught With Hand in the Data Jar The Architectural Imperative for AI-Powered E-Commerce 2020: The Year for Custom CX and Privacy Data Management The Truth About Documents and SMB Security Rumblings in the Cloud COPRA May Be Coming, and It's Not Too Soon to Prepare Emerging Tech Amid Disaster, COVID-19 Presents Opportunities 4 Customer Service AI Applications That Work Today Amazon Goes Big With Automated Grocery Store Exclusives PriceWaiter CEO Stephen Culp: 'Negotiation Has Been Around Forever Because It Works' Former White House CIO Theresa Payton: 'There Are Grave Concerns About Election Interference' Nimble CEO Jon Ferrara: The Beauty of the CRM Beast Hardware Microsoft Releases 'Mind Blowing' Xbox Specs Getting Autonomous Car Technology Right Unsigned Firmware Puts Windows, Linux Peripherals at Risk Internet of Things Philips Hue Vulnerability Shines Light on Possible IoT Security Nightmare Bridging the IoT Innovation-Security Gap Cybersecurity 2020: A Perilous Landscape IT Leadership The CEO of the Decade Leaked Audio Reveals Zuckerberg Spinning Hard What's Wrong With Apple? Mobile Tech Robinhood Outages Anger Customers Apple to Pay Up to $500M for Throttling iPhones Some Android Malware Can Break Your Phone When You Delete It Science 3 Things the Tech Industry Could Do to Mitigate Pandemic Problems Coronavirus Nerves: Whoa Horsey! COVID-19 and the Bleak Outlook for the Tech Supply Chain Spotlight Features The Dark Art of Turning Mountains of Stolen Data Into Cash AI in the Courts: The Jury Is Out The Drones Are Coming Tech Buzz COVID-19 and the End of Daily Life as We Know It Shifting Our Global Problem-Solving Focus From Symptoms to Cause The Really Big Salesforce-Vlocity Deal Women In Tech Televerde's Michelle Cirocco: 'Invest in Disempowered Populations' ISACA Board Member Gabriela Reynaga on Gender, Tech and Perceptions Star Explorer Mae Jemison: The Sky Connects Us Publications ALL EC CRM Buyer E-Commerce Times LinuxInsider TechNewsWorld Newsletters E-Commerce Minute Tech News Flash ECT News Network Weekly Editor's Pick Subscribe Reader Services Account Management Discussion Editorial Calendar Linking Policy Network Map News Alerts RSS / XML Feeds Search ECT News Network Company Info About Advertising Business Development Careers Contact Permissions Reprint Information Terms of Service | Privacy Policy | How To Advertise Copyright 1998-2020 ECT News Network, Inc. All Rights Reserved.